const { cmd } = require('../command')

cmd({
    pattern: "settings",
    alias: ["setting"],
    desc: "settings the bot",
    react: "‚öôÔ∏è",
    category: "owner"

const config = await readEnv(..lib/mongodb);

        let work;
        switch (config.MODE) {
            case 'public':
                work = 'ùôøùöÑùô±ùôªùô∏ùô≤üåé';
                break;
            case 'private':
                work = 'ùôøùöÅùô∏ùöÖùô∞ùöÉùô¥üë§';
                break;
            case 'groups':
                work = 'ùô∂ùöÅùôæùöÑùôø ùôæùôΩùôªùöàüë•';
                break;
            case 'inbox':
                work = 'ùô∏ùôΩùô±ùôæùöá ùôæùôΩùôªùöàü´Ç';
                break;
            default:
                work = 'ùöÑùôΩùô∫ùôæùöÜùôΩüõë';
        }

        let autoStatus = config.AUTO_READ_STATUS === 'true' ? '‚ôªÔ∏è ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autocmd = config.AUTO_READ_CMD === 'true' ? '‚ôªÔ∏è ùôæùôΩ' : 'üö´ ùôæùôµùôµ
        let autoVoice = config.AUTO_VOICE === 'true' ? '‚ôªÔ∏è ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
        let autotyping = config.AUTO_TYPING === 'true' ? '‚ôªÔ∏è ùôæùôΩ' : 'üö´ ùôæùôµùôµ';
    
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply }) => {
    try {
        let desc = `‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ       ‚öôÔ∏è *SAHAS MD BOT SETTINGS* ‚öôÔ∏è
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ
‚î£‚îÅüíº *Work Mode* : *${work}*
‚î£‚îÅüîä *Auto Voice* : *${autoVoice}*
‚î£‚îÅüìù *Auto Status* : *${autoStatus}*
‚î£‚îÅüìã *Auto Bio* : on/off
‚î£‚îÅ‚å®Ô∏è *Auto Typing* : *${autotyping}*
‚î£‚îÅüõ†Ô∏è *Auto Read Command* : *${autocmd}*
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ
‚îÉ      üîó  *CUSTOMIZE YOUR SETTINGS* ‚§µÔ∏è
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
‚îÉ       üîß *OPTIONS MENU* üîß
‚îÉ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÉ

‚î£‚îÅ *_WORK MODE_* ‚§µÔ∏è
‚îÉ   ‚î£ 1.1 üîπ *Public Work*
‚îÉ   ‚î£ 1.2 üîπ *Private Work*
‚îÉ   ‚î£ 1.3 üîπ *Group Only*
‚îÉ   ‚îó 1.4 üîπ *Inbox Only*

‚î£‚îÅ *_AUTO VOICE_* ‚§µÔ∏è
‚îÉ   ‚î£ 2.1 üîä *Auto Voice On*
‚îÉ   ‚îó 2.2 üîï *Auto Voice Off*

‚î£‚îÅ *_AUTO STATUS SEEN_* ‚§µÔ∏è
‚îÉ   ‚î£ 3.1 üëÅÔ∏è‚Äçüó®Ô∏è *Auto Read Status On*
‚îÉ   ‚îó 3.2 üëÅÔ∏è‚ùå *Auto Read Status Off*

‚î£‚îÅ *_AUTO BIO_* ‚§µÔ∏è
‚îÉ   ‚î£ 4.1 ‚úçÔ∏è *Auto Bio On*
‚îÉ   ‚îó 4.2 ‚úçÔ∏è‚ùå *Auto Bio Off*

‚î£‚îÅ *_24/7 NEWS SERVICE_* ‚§µÔ∏è
‚îÉ   ‚î£ 5.1 üì∞ *Activate News Service*
‚îÉ   ‚îó 5.2 üõë *Deactivate News Service*

‚î£‚îÅ *_AUTO TYPING_* ‚§µÔ∏è
‚îÉ   ‚î£ 6.1 üìù *Activate Auto Typing*
‚îÉ   ‚îó 6.2 üìù‚ùå *Deactivate Auto Typing*

‚î£‚îÅ *_AUTO COMMAND READ_* ‚§µÔ∏è
‚îÉ   ‚î£ 7.1 üñäÔ∏è *Activate Auto Command Read*
‚îÉ   ‚îó 7.2 üñäÔ∏è‚ùå *Deactivate Auto Command Read*
‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

> *¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è Íú±·¥Ä ú·¥ÄÍú± ·¥õ·¥á·¥Ñ ú*`;

        const vv = await conn.sendMessage(from, { image: { url: "https://files.catbox.moe/de82e3.jpg"}, caption: desc }, { quoted: mek });

        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const selectedOption = msg.message.extendedTextMessage.text.trim();

            if (msg.message.extendedTextMessage.contextInfo && msg.message.extendedTextMessage.contextInfo.stanzaId === vv.key.id) {
                switch (selectedOption) {
                    case '1.1':
                        reply(".update MODE:public" );
                        reply(".restart");
                        break;
                    case '1.2':               
                        reply(".update MODE:private");
                        reply(".restart");
                        break;
                    case '1.3':               
                          reply(".update MODE:group");
                        reply(".restart");
                      break;
                    case '1.4':     
                        reply(".update MODE:inbox");
                        reply(".restart");
                      break;
                    case '2.1':     
                        reply(".update AUTO_VOICE:true");
                        reply(".restart");
                        break;
                    case '2.2':     
                        reply(".update AUTO_VOICE:false");
                        reply(".restart");
                    break;
                    case '3.1':    
                        reply(".update AUTO_READ_STATUS:true");
                        reply(".restart");
                    break;
                    case '3.2':    
                        reply(".update AUTO_READ_STATUS:false");
                        reply(".restart");
                    break;
                    case '4.1': 
                    reply(".setautobio");
                    break;
                    case '4.2': 
                    reply(".setautobio");
                    break;
                    case '5.1': 
                    reply(".startnews");
                    break;
                    case '5.2': 
                    reply(".stopnews");
                    break;
                    case '6.1':      
                        reply(".update AUTO_TYPING:true");
                        reply(".restart");
                        break;
                    case '6.2':   
                        reply(".update AUTO_TYPING:false");
                        reply(".restart");
                    break;
                    case '7.1': 
                        reply(".update AUTO_READ_CMD:true");
                        reply(".restart");
                    break;
                    case '7.2':   
                        reply(".update AUTO_READ_CMD:false");
                        reply(".restart");
                    
                        break;
                    default:
                        reply("Invalid option. Please select a valid optionüî¥");
                }

            }
        });

    } catch (e) {
        console.error(e);
        await conn.sendMessage(from, { react: { text: '‚ùå', key: mek.key } })
        reply('An error occurred while processing your request.');
    }
});
